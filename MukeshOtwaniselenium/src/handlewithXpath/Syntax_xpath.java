package handlewithXpath;

public class Syntax_xpath {

	public static void main(String[] args) {
		
		
/*
1. Syntax: //tagname[@attribute-name=’value1’]
 
			Examples: 
			//a[@href=’https://google.com’]
			//a[]
			//input[@id=’name’]
			//input[‘@name=’Username’]
			//img[@alt=’sometext’] 
2.	Search for selenium locator for more than 1 element.
//input[@class=input][@name=’log’]

3.	More than one property to specify OR and AND inbetween the elements. Here AND and OR does not have to be case sensitive.
//input[@class=’input’ or @name=’log’]

Note: Do not use class as class may have more than 1 element. In QTP you have object spy which does the task of identifying the element for you but in selenium you cannot rely on Firefox-firebug or any Xpath that is generated by the browser, which is why you have to create your own xpath or locator.


4.	Using Contains method having following: It will not check for exact contains but check for the partial contains. Here following will be to check what follows next for element identification.
Syntax: //tagname[contains(@attribute,’value1’)

//*[text()=’Discussion’]//following::a[contains(@href, ‘edit.php’))[text()=’posts’]
//a[contains(text(), ‘Enter your text’)]
//input[contains(@id,’’)]
//input[contains(@name,’’)]
//a[contains(@href,’’)]
//img[contains(@src,’’)]
//div[contains(@id,’’)]


5.	Using Start-with method : finds specific pattern only at the starting.
Syntax: //tagname[starts-with(@attribute,’’)]

//id[starts-with(@id,’’)]
 
//a[starts-with(@href=’’)]
 
//img[starts-with(@src=’’)]
 
//div[starts-with(@id=’’)]
 
//input[starts-with(@id=’’)]
 
//button[starts-with(@id,’’)]

6. Using following method: finds the element based on earlier element where the element to find is searched.
Xpath/following::again-ur-regular-path
 
//input[@id=’’]/following::input[1]
 
//a[@href=’’]/following::a[1]
 
//img[@src=’’]/following::img[1]

7. Using Preceding node method:

Xpath/preceding::again-ur-regular-path
 
//input[@id=’’]/ preceding::input[1]
 
//a[@href=’’]/ preceding::a[1]
 //img[@src=’’]/ preceding::img[1]

8. Absolute Xpath:

Syntax- tagname[text()=’text which is visible on page’]

Note- While using text() method make sure you provide the exact text else it will not match
Example //b[text()=’Admin’]

9. Test Method in xpath:
Syntax- tagname[contains(text(),’partial text which you want to search ‘)]

Example – //*[contains(text(),’Employee Distribution by Subunit’)]
 
 
Checkout more on Xpath Axes 
 
*/ 
 
			 
		

	}

}
